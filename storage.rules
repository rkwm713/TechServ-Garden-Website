rules_version = '2';

// Storage rules for the TechServ Community Garden
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Profile photos: users can read any user's profile photo but only update their own
    match /profile_photos/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Task attachments: same rules as tasks in Firestore
    match /task_attachments/{taskId}/{fileName} {
      function isTaskPublic() {
        return !firestore.get(/databases/(default)/documents/tasks/$(taskId)).data.isPersonal;
      }
      
      function isTaskCreator() {
        return isAuthenticated() && 
               firestore.get(/databases/(default)/documents/tasks/$(taskId)).data.createdBy == request.auth.uid;
      }
      
      function isTaskAssignee() {
        return isAuthenticated() && 
               exists(/databases/(default)/documents/task_assignments/$(taskId)_$(request.auth.uid));
      }
      
      // Anyone logged in can read attachments for public tasks
      allow read: if isAuthenticated() && isTaskPublic();
      
      // Task creator can read/write attachments for personal tasks
      allow read, write: if isTaskCreator();
      
      // Assignees can read attachments
      allow read: if isTaskAssignee();
      
      // Admin can read/write all attachments
      allow read, write: if isAdmin();
    }
    
    // Community content: anyone authenticated can read, only admin/moderators can write
    match /community/{fileName} {
      function isModerator() {
        return isAuthenticated() && 
               firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'moderator'];
      }
      
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isModerator();
    }
  }
}
